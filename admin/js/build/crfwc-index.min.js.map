{"version":3,"file":"crfwc-index.min.js","mappings":"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","sources":["webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/BaseColumnSeries.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/ColumnSeries.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/Root.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/States.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/locales/en.js","webpack://customer-reports-for-wc/./node_modules/@amcharts/amcharts5/themes/Animated.js","webpack://customer-reports-for-wc/./node_modules/svg-arc-to-cubic-bezier/modules/index.js","webpack://customer-reports-for-wc/external window \"React\"","webpack://customer-reports-for-wc/external window [\"wp\",\"element\"]","webpack://customer-reports-for-wc/./node_modules/tslib/tslib.es6.mjs","webpack://customer-reports-for-wc/webpack/bootstrap","webpack://customer-reports-for-wc/webpack/runtime/compat get default export","webpack://customer-reports-for-wc/webpack/runtime/define property getters","webpack://customer-reports-for-wc/webpack/runtime/hasOwnProperty shorthand","webpack://customer-reports-for-wc/webpack/runtime/make namespace object","webpack://customer-reports-for-wc/./js/index.js"],"sourcesContent":[";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.hide(0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"plotbackground\", \"xy\", \"background\"]\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(event.point);\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                if ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\r\n                    this.handleWheel(event);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        if (originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(event.point);\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const pointerId = originalEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event.originalEvent;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(event.point);\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    series.setRaw(\"tooltipDataItem\", closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\r\n                        this.xAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\r\n                        this.yAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        xAxis._seriesAdded = true;\r\n        yAxis._seriesAdded = true;\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n        const patternSet = this.get(\"patterns\");\r\n        if (patternSet) {\r\n            if (series.get(\"fillPattern\") == null) {\r\n                const pattern = patternSet.next();\r\n                series._setSoft(\"fillPattern\", pattern);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\r\n        const positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        const hh = this.height();\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip && !tooltip.get(\"forceHidden\")) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point && closestPoint) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        // Explicitly disposing cursor to avoid memory leak of cursor adding\r\n        // keyboard events after parent chart has been disposed\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        r(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"minor\"]).setAll({\r\n            fontSize: \"0.6em\"\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"minor\"]);\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.07,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // AXIS RANGE GRIP\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                strokeWidth: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(2, 0.5);\r\n                    display.lineTo(2, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"rangegrip\"]).setAll({\r\n            draggable: true,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n            centerY: p100\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_alwaysShow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(key, ctrlKey) {\r\n        let dir = \"\";\r\n        const chart = this.chart;\r\n        let axis;\r\n        if (chart && chart.xAxes.length) {\r\n            if (this._root.focused(this.lineX)) {\r\n                dir = \"positionX\";\r\n                axis = chart.xAxes.getIndex(0);\r\n            }\r\n            else if (this._root.focused(this.lineY)) {\r\n                axis = chart.yAxes.getIndex(0);\r\n                dir = \"positionY\";\r\n            }\r\n            let m = 1;\r\n            if (ctrlKey) {\r\n                m = 5;\r\n            }\r\n            if (axis) {\r\n                let inversed = axis.get(\"renderer\").get(\"inversed\", false);\r\n                let step;\r\n                if (key == \"ArrowRight\" || key == \"ArrowDown\") {\r\n                    step = 1;\r\n                }\r\n                else if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\r\n                    step = -1;\r\n                }\r\n                else if (key == \"Tab\") {\r\n                    step = 0;\r\n                }\r\n                if (step != null) {\r\n                    if (inversed) {\r\n                        step *= -1;\r\n                    }\r\n                    this.set(dir, axis.nextPosition(step * m));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleLineFocus() {\r\n        this._alwaysShow = this.get(\"alwaysShow\", false);\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\", 0),\r\n            positionY: this.getPrivate(\"positionY\", 0),\r\n            alwaysShow: true\r\n        });\r\n        this._handleLineMove(\"Tab\");\r\n    }\r\n    _handleLineBlur() {\r\n        if (this.lineX.isFocus() || this.lineY.isFocus()) {\r\n            this.setAll({\r\n                positionX: undefined,\r\n                positionY: undefined,\r\n                alwaysShow: this._alwaysShow\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event);\r\n            if (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\r\n                this._handleLineBlur();\r\n                this._lastPoint2 = event.point;\r\n            }\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = event.point;\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = event.point;\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                    else {\r\n                        const type = \"selectcancelled\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = event.point;\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent, originalEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Array of minor data items.\r\n         */\r\n        Object.defineProperty(this, \"minorDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesAdded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        if (this.get(\"zoomable\", true)) {\r\n            this._updateFinals(start, end);\r\n            if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n                let sAnimation = this._sAnimation;\r\n                let eAnimation = this._eAnimation;\r\n                let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    start = -maxDeviation;\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    end = 1 + maxDeviation;\r\n                }\r\n                if (start > end) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (!priority) {\r\n                    priority = \"end\";\r\n                }\r\n                let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n                let maxZoomFactorReal = maxZoomFactor;\r\n                if (end === 1 && start !== 0) {\r\n                    if (start < this.get(\"start\", 0)) {\r\n                        priority = \"start\";\r\n                    }\r\n                    else {\r\n                        priority = \"end\";\r\n                    }\r\n                }\r\n                if (start === 0 && end !== 1) {\r\n                    if (end > this.get(\"end\", 1)) {\r\n                        priority = \"end\";\r\n                    }\r\n                    else {\r\n                        priority = \"start\";\r\n                    }\r\n                }\r\n                let minZoomCount = this.get(\"minZoomCount\", 0);\r\n                let maxZoomCount = this.get(\"maxZoomCount\", Infinity);\r\n                if ($type.isNumber(minZoomCount)) {\r\n                    maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n                }\r\n                let minZoomFactor = 1;\r\n                if ($type.isNumber(maxZoomCount)) {\r\n                    minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n                }\r\n                // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n                if (priority === \"start\") {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            end = start + 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // add to the end\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                    //unless end is > 0\r\n                    if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                        //end = 1;\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                // most likely we are dragging right, so we modify left\r\n                else {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            start = end - 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // remove from start\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                    if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                        //start = 0;\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                    const chart = this.chart;\r\n                    if (chart) {\r\n                        chart._handleAxisSelection(this, true);\r\n                    }\r\n                }\r\n                if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                    return;\r\n                }\r\n                if (duration > 0) {\r\n                    let easing = this.get(\"interpolationEasing\");\r\n                    let sAnimation, eAnimation;\r\n                    if (this.get(\"start\") != start) {\r\n                        sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                    }\r\n                    if (this.get(\"end\") != end) {\r\n                        eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                    }\r\n                    this._sAnimation = sAnimation;\r\n                    this._eAnimation = eAnimation;\r\n                    if (sAnimation) {\r\n                        return sAnimation;\r\n                    }\r\n                    else if (eAnimation) {\r\n                        return eAnimation;\r\n                    }\r\n                }\r\n                else {\r\n                    this.set(\"start\", start);\r\n                    this.set(\"end\", end);\r\n                }\r\n            }\r\n            else {\r\n                if (this._sAnimation) {\r\n                    this._sAnimation.stop();\r\n                }\r\n                if (this._eAnimation) {\r\n                    this._eAnimation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart._updateCursor();\r\n            }\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, true);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, false);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleFHDataItem(dataItem, forceHidden) {\r\n        const fh = \"forceHidden\";\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.set(fh, forceHidden);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.set(fh, forceHidden);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.set(fh, forceHidden);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.set(fh, forceHidden);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.set(fh, forceHidden);\r\n            }\r\n        }\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        const v = \"visible\";\r\n        if (label) {\r\n            label.setPrivate(v, visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(v, visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(v, visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(v, visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(v, visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags, minor) {\r\n        var _a, _b, _c;\r\n        const renderer = this.get(\"renderer\");\r\n        let m = \"minor\";\r\n        const label = dataItem.get(\"label\");\r\n        if (!label) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = label.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_a = label.parent) === null || _a === void 0 ? void 0 : _a.children.removeValue(label);\r\n                renderer.makeLabel(dataItem, tags);\r\n                label.dispose();\r\n                renderer.labels.removeValue(label);\r\n            }\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (!grid) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = grid.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_b = grid.parent) === null || _b === void 0 ? void 0 : _b.children.removeValue(grid);\r\n                renderer.makeGrid(dataItem, tags);\r\n                grid.dispose();\r\n                renderer.grid.removeValue(grid);\r\n            }\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (!tick) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        else {\r\n            let remove = false;\r\n            let themeTags = tick.get(\"themeTags\");\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_c = tick.parent) === null || _c === void 0 ? void 0 : _c.children.removeValue(tick);\r\n                renderer.makeTick(dataItem, tags);\r\n                tick.dispose();\r\n                renderer.ticks.removeValue(tick);\r\n            }\r\n        }\r\n        if (!minor && !dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n        this._seriesAdded = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = Math.ceil(bounds.right - bounds.left);\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = Math.ceil(bounds.right - bounds.left);\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                        series._settings.tooltipDataItem = dataItem;\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                        series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (this.get(\"snapTooltip\")) {\r\n                position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n            }\r\n            this.setPrivateRaw(\"tooltipPosition\", position);\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (!$type.isNaN(position)) {\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Converts relative position of the axis to a global position taking current\r\n     * zoom into account (opposite to what `toAxisPosition` does).\r\n     *\r\n     * @since 5.4.2\r\n     * @param position Position\r\n     * @return Global position\r\n     */\r\n    toGlobalPosition(position) {\r\n        return this.get(\"renderer\").toGlobalPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template]))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template]))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template]))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event);\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"minGridDistance\")) {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.axis.markDirtySize();\r\n            });\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(event.point);\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(event.point);\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\r\n            this.axis.zoom(downStart - extra, downEnd + extra, 0);\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start);\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            if (!chart.inPlot(point)) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"width\") == null) {\r\n            axis.set(\"width\", p100);\r\n        }\r\n        ;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nexport class CategoryAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.fields.push(\"category\");\r\n        this.setPrivateRaw(\"name\", \"category\");\r\n        this.addTag(\"category\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const len = this.dataItems.length;\r\n        let i = 0;\r\n        if (this._valuesDirty) {\r\n            this._itemMap = {};\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                dataItem.setRaw(\"index\", i);\r\n                this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                i++;\r\n            });\r\n            this.setPrivateRaw(\"maxZoomFactor\", len);\r\n        }\r\n        this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n        this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n        if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n            if (this.dataItems.length > 0) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        $array.each(this.series, (series) => {\r\n            let startCategory = this.dataItems[this.startIndex()].get(\"category\");\r\n            let endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\r\n            let baseAxis = series.get(\"baseAxis\");\r\n            let xAxis = series.get(\"xAxis\");\r\n            let yAxis = series.get(\"yAxis\");\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                series._markDirtyAxes();\r\n            }\r\n            else if (baseAxis === this) {\r\n                let key;\r\n                let openKey;\r\n                let otherAxis = yAxis;\r\n                if (xAxis === baseAxis) {\r\n                    if (series.get(\"categoryXField\")) {\r\n                        key = \"categoryX\";\r\n                    }\r\n                    if (series.get(\"openCategoryXField\")) {\r\n                        openKey = \"openCategoryX\";\r\n                    }\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    if (series.get(\"categoryYField\")) {\r\n                        key = \"categoryY\";\r\n                    }\r\n                    if (series.get(\"openCategoryYField\")) {\r\n                        openKey = \"openCategoryY\";\r\n                    }\r\n                    otherAxis = xAxis;\r\n                }\r\n                if (otherAxis instanceof ValueAxis) {\r\n                    if (key || openKey) {\r\n                        let startDataItem;\r\n                        let endDataItem;\r\n                        for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let startIndex = 0;\r\n                        let endIndex = series.dataItems.length;\r\n                        if (startDataItem) {\r\n                            startIndex = series.dataItems.indexOf(startDataItem);\r\n                        }\r\n                        if (endDataItem) {\r\n                            endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                        }\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                        let hasValue = false;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            const dataItem = series.dataItems[i];\r\n                            $array.each(series.__valueXShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            $array.each(series.__valueYShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            if (hasValue) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", !hasValue);\r\n                    }\r\n                }\r\n                series._markDirtyAxes(); // must be outside\r\n            }\r\n        });\r\n    }\r\n    _prepareAxisItems() {\r\n        var _a;\r\n        const renderer = this.get(\"renderer\");\r\n        const len = this.dataItems.length;\r\n        let startIndex = this.startIndex();\r\n        if (startIndex > 0) {\r\n            startIndex--;\r\n        }\r\n        let endIndex = this.endIndex();\r\n        if (endIndex < len) {\r\n            endIndex++;\r\n        }\r\n        const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n        const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n        let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1);\r\n        let frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n        startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._frequency = frequency;\r\n        for (let j = 0; j < len; j++) {\r\n            this._toggleDataItem(this.dataItems[j], false);\r\n        }\r\n        let f = this.dataItems[startIndex].get(\"index\", 0);\r\n        for (let i = startIndex; i < endIndex; i = i + frequency) {\r\n            let dataItem = this.dataItems[i];\r\n            this._createAssets(dataItem, []);\r\n            this._toggleDataItem(dataItem, true);\r\n            let count = frequency;\r\n            if (minorGridEnabled) {\r\n                count = 1;\r\n            }\r\n            this._prepareDataItem(dataItem, f, count);\r\n            f++;\r\n        }\r\n        if (renderer.get(\"minorGridEnabled\")) {\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (i % frequency != 0) {\r\n                    this._createAssets(dataItem, [\"minor\"], true);\r\n                    this._toggleDataItem(dataItem, true);\r\n                    this._prepareDataItem(dataItem, 0, 1);\r\n                    if (!minorLabelsEnabled) {\r\n                        (_a = dataItem.get(\"label\")) === null || _a === void 0 ? void 0 : _a.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _prepareDataItem(dataItem, fillIndex, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n        let endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n        let index = dataItem.get(\"index\");\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.get(\"category\"));\r\n        }\r\n        let position = this.indexToPosition(index, categoryLocation);\r\n        let endCategory = dataItem.get(\"endCategory\");\r\n        let endIndex;\r\n        if (endCategory) {\r\n            endIndex = this.categoryToIndex(endCategory);\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = index;\r\n            }\r\n        }\r\n        else {\r\n            endIndex = index;\r\n        }\r\n        let endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n        let fillEndIndex;\r\n        let fillEndPosition;\r\n        if (dataItem.get(\"isRange\")) {\r\n            fillEndIndex = endIndex;\r\n        }\r\n        else {\r\n            fillEndIndex = index + this._frequency - 1;\r\n        }\r\n        fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        const fillRule = this.get(\"fillRule\");\r\n        if (fillRule) {\r\n            fillRule(dataItem, fillIndex);\r\n        }\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    baseValue() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    basePosition() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    getX(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    getY(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    indexToPosition(index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        let len = this.dataItems.length;\r\n        let startLocation = this.get(\"startLocation\", 0);\r\n        let endLocation = this.get(\"endLocation\", 1);\r\n        len -= startLocation;\r\n        len -= (1 - endLocation);\r\n        let position = (index + location - startLocation) / len;\r\n        let dataItem = this.dataItems[index];\r\n        if (dataItem) {\r\n            position += dataItem.get(\"deltaPosition\", 0);\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    categoryToIndex(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return dataItem.get(\"index\");\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dataItemToPosition(dataItem) {\r\n        return this.indexToPosition(dataItem.get(\"index\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        position += (0.5 - location) / this.dataItems.length;\r\n        return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n    }\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    axisPositionToIndex(position) {\r\n        let len = this.dataItems.length;\r\n        return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        //@todo number formatter + tag\r\n        const dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n        if (dataItem) {\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                return populateString(label, this.get(\"tooltipText\", \"\"));\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n        tooltip.label.text.markDirtyText();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        if (this.dataItems.length > 0) {\r\n            let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            let index = this.axisPositionToIndex(position);\r\n            // try simple first\r\n            let seriesDataItem = series.dataItems[index];\r\n            let axisDataItem = this.dataItems[index];\r\n            let category = axisDataItem.get(\"category\");\r\n            if (seriesDataItem && axisDataItem) {\r\n                if (seriesDataItem.get(fieldName) === category) {\r\n                    return seriesDataItem;\r\n                }\r\n            }\r\n            // if not found, try looking\r\n            for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                let dataItem = series.dataItems[i];\r\n                if (dataItem.get(fieldName) === category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToIndexes(start, end, duration) {\r\n        let len = this.dataItems.length;\r\n        this.zoom(start / len, end / len, duration);\r\n    }\r\n    zoomToCategories(startCategory, endCategory, duration) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        const position = this.getPrivate(\"tooltipPosition\", 0);\r\n        const index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\r\n        return this.toGlobalPosition(this.indexToPosition(index));\r\n    }\r\n}\r\nObject.defineProperty(CategoryAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CategoryAxis\"\r\n});\r\nObject.defineProperty(CategoryAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([CategoryAxis.className])\r\n});\r\n//# sourceMappingURL=CategoryAxis.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dseHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minRealLog\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        let someDirty = false;\r\n        if (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            someDirty = true;\r\n            this.ghostLabel.set(\"text\", \"\");\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\r\n            this._getMinMax();\r\n            this._dirtyExtremes = false;\r\n        }\r\n        this._handleSizeDirty();\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            const chart = this.chart;\r\n            let getMM = false;\r\n            // #1563\r\n            if (chart) {\r\n                const letter = this.get(\"renderer\").getPrivate(\"letter\");\r\n                if (letter == \"Y\") {\r\n                    chart.xAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n                else if (letter == \"X\") {\r\n                    chart.yAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (getMM) {\r\n                this._getSelectionMinMax();\r\n            }\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _handleSizeDirty() {\r\n        if (this._sizeDirty && !this._dseHandled) {\r\n            this._dirtySelectionExtremes = true;\r\n            this._dseHandled = true;\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dseHandled = false;\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        if ($type.isNumber(this._minRealLog)) {\r\n                            minLog = this._minRealLog;\r\n                        }\r\n                        else {\r\n                            minLog = Math.pow(10, -50);\r\n                        }\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\r\n                }\r\n            }\r\n            /// minor grid\r\n            const renderer = this.get(\"renderer\");\r\n            const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n            const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n            let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n            const stepAdjusted = Math.round(step / stepPower);\r\n            let minorGridCount = 2;\r\n            if ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\r\n                minorGridCount = 5;\r\n            }\r\n            if ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\r\n                minorGridCount = 10;\r\n            }\r\n            let minorStep = step / minorGridCount;\r\n            // end of minor grid\r\n            let i = 0;\r\n            let m = 0;\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                this._toggleDataItem(dataItem, true);\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                let nextValue = value;\r\n                if (!logarithmic) {\r\n                    nextValue += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        nextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\r\n                    }\r\n                    else {\r\n                        nextValue += step;\r\n                    }\r\n                }\r\n                // minor grid\r\n                if (minorGridEnabled) {\r\n                    let minorValue = value + minorStep;\r\n                    if (logarithmic) {\r\n                        if (differencePower > 2) {\r\n                            let minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\r\n                            minorStep = minorMinMaxStep.step;\r\n                        }\r\n                        minorValue = value + minorStep;\r\n                    }\r\n                    while (minorValue < nextValue - step * 0.00000000001) {\r\n                        let minorDataItem;\r\n                        if (this.minorDataItems.length < m + 1) {\r\n                            minorDataItem = new DataItem(this, undefined, {});\r\n                            this.minorDataItems.push(minorDataItem);\r\n                            this.processDataItem(minorDataItem);\r\n                        }\r\n                        else {\r\n                            minorDataItem = this.minorDataItems[m];\r\n                        }\r\n                        this._createAssets(minorDataItem, [\"minor\"], true);\r\n                        this._toggleDataItem(minorDataItem, true);\r\n                        minorDataItem.setRaw(\"value\", minorValue);\r\n                        const minorLabel = minorDataItem.get(\"label\");\r\n                        if (minorLabel) {\r\n                            if (minorLabelsEnabled) {\r\n                                minorLabel.set(\"text\", this._formatText(minorValue));\r\n                            }\r\n                            else {\r\n                                minorLabel.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                        this._prepareDataItem(minorDataItem);\r\n                        minorValue += minorStep;\r\n                        m++;\r\n                    }\r\n                }\r\n                value = nextValue;\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1 && !logarithmic) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this._toggleDataItem(this.dataItems[j], false);\r\n            }\r\n            for (let j = m; j < this.minorDataItems.length; j++) {\r\n                this._toggleDataItem(this.minorDataItems[j], false);\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        let labelEndPosition = endPosition;\r\n        let labelEndValue = dataItem.get(\"labelEndValue\");\r\n        if (labelEndValue != null) {\r\n            labelEndPosition = this.valueToPosition(labelEndValue);\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minX = series.getPrivate(\"minX\");\r\n                            let maxX = series.getPrivate(\"maxX\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minX = undefined;\r\n                                maxX = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", minX);\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", maxX);\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minY = series.getPrivate(\"minY\");\r\n                            let maxY = series.getPrivate(\"maxY\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minY = undefined;\r\n                                maxY = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", minY);\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", maxY);\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                let smin = selectionMin;\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                if (selectionMin < min) {\r\n                    let d = smin - min;\r\n                    if (d == 0) {\r\n                        d = this._deltaMinMax;\r\n                    }\r\n                    selectionMin = smin - d;\r\n                    selectionMax = smin + d;\r\n                    strictMinMax = true;\r\n                }\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            let delta = selectionMax - selectionMin;\r\n            selectionMin -= delta * extraMin;\r\n            selectionMax += delta * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                if (minMaxStep.min < min) {\r\n                    minMaxStep.min = min;\r\n                }\r\n                if (minMaxStep.max > max) {\r\n                    minMaxStep.max = max;\r\n                }\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = selectionMinReal;\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = selectionMaxReal;\r\n                }\r\n                if (selectionMax - selectionMin <= 0.00000001) {\r\n                    selectionMin -= this._deltaMinMax;\r\n                    selectionMax += this._deltaMinMax;\r\n                }\r\n                let delta = selectionMax - selectionMin;\r\n                selectionMin -= delta * extraMin;\r\n                selectionMax += delta * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        if (min > max) {\r\n            [min, max] = [max, min];\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        this._minRealLog = min;\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            let delta = max - min;\r\n            min -= delta * extraMin;\r\n            max += delta * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n                if (step == 0) {\r\n                    step = 1;\r\n                }\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        let value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\r\n        value += this.getPrivate(\"step\", 1) * count;\r\n        value = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\r\n        return this.toGlobalPosition(this.valueToPosition(value));\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { __awaiter } from \"tslib\";\r\nimport { XYSeries } from \"./XYSeries\";\r\nimport { Percent } from \"../../../core/util/Percent\";\r\nimport { visualSettings } from \"../../../core/render/Graphics\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n/**\r\n * Base class for all \"column-based\" series\r\n */\r\nexport class BaseColumnSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_ph\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _makeGraphics(listTemplate, dataItem) {\r\n        return this.makeColumn(dataItem, listTemplate);\r\n    }\r\n    _makeFieldNames() {\r\n        super._makeFieldNames();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const categoryAxis = \"CategoryAxis\";\r\n        const valueAxis = \"ValueAxis\";\r\n        if (xAxis.isType(categoryAxis)) {\r\n            if (!this.get(\"openCategoryXField\")) {\r\n                this._xOpenField = this._xField;\r\n            }\r\n        }\r\n        if (xAxis.isType(valueAxis)) {\r\n            if (!this.get(\"openValueXField\")) {\r\n                this._xOpenField = this._xField;\r\n            }\r\n        }\r\n        if (yAxis.isType(categoryAxis)) {\r\n            if (!this.get(\"openCategoryYField\")) {\r\n                this._yOpenField = this._yField;\r\n            }\r\n        }\r\n        if (yAxis.isType(valueAxis)) {\r\n            if (!this.get(\"openValueYField\")) {\r\n                this._yOpenField = this._yField;\r\n            }\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const len = this.dataItems.length;\r\n        const startIndex = Math.max(0, this.startIndex() - 2);\r\n        const endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n        if (xAxis.inited && yAxis.inited) {\r\n            for (let i = startIndex; i <= endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                this._createGraphics(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            this._ph = chart.plotContainer.height();\r\n            this._pw = chart.plotContainer.width();\r\n        }\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const columnsTemplate = this.columns.template;\r\n        if (this.isDirty(\"fill\")) {\r\n            if (columnsTemplate.get(\"fill\") == null) {\r\n                columnsTemplate.set(\"fill\", this.get(\"fill\"));\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillPattern\")) {\r\n            if (columnsTemplate.get(\"fillPattern\") == null) {\r\n                columnsTemplate.set(\"fillPattern\", this.get(\"fillPattern\"));\r\n            }\r\n        }\r\n        if (this.isDirty(\"stroke\")) {\r\n            if (columnsTemplate.get(\"stroke\") == null) {\r\n                columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\r\n            }\r\n        }\r\n        let index = 0;\r\n        let clusterCount = 0;\r\n        let i = 0;\r\n        $array.each(baseAxis.series, (series) => {\r\n            if (series instanceof BaseColumnSeries) {\r\n                const stacked = series.get(\"stacked\");\r\n                if (stacked && i == 0) {\r\n                    clusterCount++;\r\n                }\r\n                if (!stacked && series.get(\"clustered\")) {\r\n                    clusterCount++;\r\n                }\r\n            }\r\n            if (series === this) {\r\n                index = clusterCount - 1;\r\n            }\r\n            i++;\r\n        });\r\n        if (!this.get(\"clustered\")) {\r\n            index = 0;\r\n            clusterCount = 1;\r\n        }\r\n        if (clusterCount === 0) {\r\n            clusterCount = 1;\r\n            index = 0;\r\n        }\r\n        const xRenderer = xAxis.get(\"renderer\");\r\n        const yRenderer = yAxis.get(\"renderer\");\r\n        const cellStartLocation = \"cellStartLocation\";\r\n        const cellEndLocation = \"cellEndLocation\";\r\n        const cellLocationX0 = xRenderer.get(cellStartLocation, 0);\r\n        const cellLocationX1 = xRenderer.get(cellEndLocation, 1);\r\n        const cellLocationY0 = yRenderer.get(cellStartLocation, 0);\r\n        const cellLocationY1 = yRenderer.get(cellEndLocation, 1);\r\n        this._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\r\n        this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\r\n        ;\r\n        this._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\r\n        this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\r\n                const len = this.dataItems.length;\r\n                let startIndex = Math.max(0, this.startIndex() - 2);\r\n                let endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n                for (let i = 0; i < startIndex; i++) {\r\n                    this._toggleColumn(this.dataItems[i], false);\r\n                }\r\n                let previous = this.dataItems[startIndex];\r\n                for (let i = startIndex; i <= endIndex; i++) {\r\n                    let dataItem = this.dataItems[i];\r\n                    if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                        previous = dataItem;\r\n                        if (i > 0 && startIndex > 0) {\r\n                            for (let j = i - 1; j >= 0; j--) {\r\n                                let dataItem = this.dataItems[j];\r\n                                if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                                    previous = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this._toggleColumn(dataItem, false);\r\n                    }\r\n                }\r\n                for (let i = startIndex; i <= endIndex; i++) {\r\n                    let dataItem = this.dataItems[i];\r\n                    this._updateGraphics(dataItem, previous);\r\n                    if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                        previous = dataItem;\r\n                    }\r\n                }\r\n                for (let i = endIndex + 1; i < len; i++) {\r\n                    this._toggleColumn(this.dataItems[i], false);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        this.updateLegendMarker(this.get(\"tooltipDataItem\"));\r\n        super._updateChildren();\r\n    }\r\n    _createGraphics(dataItem) {\r\n        let graphics = dataItem.get(\"graphics\");\r\n        if (!graphics) {\r\n            graphics = this._makeGraphics(this.columns, dataItem);\r\n            dataItem.set(\"graphics\", graphics);\r\n            graphics._setDataItem(dataItem);\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    const ds = markerRectangle.states.lookup(\"default\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        const value = graphics.get(setting, this.get(setting));\r\n                        markerRectangle.set(setting, value);\r\n                        ds.set(setting, value);\r\n                    });\r\n                }\r\n            }\r\n            let graphicsArray = dataItem.get(\"rangeGraphics\");\r\n            if (graphicsArray) {\r\n                $array.each(graphicsArray, (graphics) => {\r\n                    graphics.dispose();\r\n                });\r\n            }\r\n            graphicsArray = [];\r\n            dataItem.setRaw(\"rangeGraphics\", graphicsArray);\r\n            this.axisRanges.each((axisRange) => {\r\n                const container = axisRange.container;\r\n                const rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\r\n                if (graphicsArray) {\r\n                    graphicsArray.push(rangeGraphics);\r\n                }\r\n                rangeGraphics.setPrivate(\"list\", axisRange.columns);\r\n                container.children.push(rangeGraphics);\r\n            });\r\n        }\r\n    }\r\n    createAxisRange(axisDataItem) {\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                graphics.dispose();\r\n                dataItem.set(\"graphics\", undefined);\r\n            }\r\n        });\r\n        return super.createAxisRange(axisDataItem);\r\n    }\r\n    _updateGraphics(dataItem, previousDataItem) {\r\n        let graphics = dataItem.get(\"graphics\");\r\n        //if (!graphics) {\r\n        //\tthis._createGraphics(dataItem);\r\n        //\tgraphics = dataItem.get(\"graphics\")!;\r\n        //}\r\n        const xField = this._xField;\r\n        const yField = this._yField;\r\n        const valueX = dataItem.get(xField);\r\n        const valueY = dataItem.get(yField);\r\n        if (valueX != null && valueY != null) {\r\n            const xOpenField = this._xOpenField;\r\n            const yOpenField = this._yOpenField;\r\n            const locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            const locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            const openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\r\n            const openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\r\n            const width = graphics.get(\"width\");\r\n            const height = graphics.get(\"height\");\r\n            const stacked = this.get(\"stacked\");\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const xStart = xAxis.get(\"start\");\r\n            const xEnd = xAxis.get(\"end\");\r\n            const yStart = yAxis.get(\"start\");\r\n            const yEnd = yAxis.get(\"end\");\r\n            let l;\r\n            let r;\r\n            let t;\r\n            let b;\r\n            let vcy = this.get(\"vcy\", 1);\r\n            let vcx = this.get(\"vcx\", 1);\r\n            let fitW = false;\r\n            let fitH = false;\r\n            if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\r\n                let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                let endLocation = this._aLocationX1 + locationX - 0.5;\r\n                if (width instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                l = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                endLocation = this._aLocationY1 + locationY - 0.5;\r\n                if (height instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                t = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                b = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                dataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\r\n            }\r\n            else if (xAxis === baseAxis) {\r\n                let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                let endLocation = this._aLocationX1 + locationX - 0.5;\r\n                if (width instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                l = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                t = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\r\n                if (this._yOpenField !== this._yField) {\r\n                    b = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\r\n                }\r\n                else {\r\n                    if (stacked) {\r\n                        let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                        if (stackToItemY) {\r\n                            b = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\r\n                        }\r\n                        else {\r\n                            b = yAxis.basePosition();\r\n                        }\r\n                    }\r\n                    else {\r\n                        b = yAxis.basePosition();\r\n                    }\r\n                }\r\n                dataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\r\n                fitH = true;\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                let startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                let endLocation = this._aLocationY1 + locationY - 0.5;\r\n                if (height instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                t = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                b = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\r\n                if (this._xOpenField !== this._xField) {\r\n                    l = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\r\n                }\r\n                else {\r\n                    if (stacked) {\r\n                        let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                        if (stackToItemX) {\r\n                            l = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\r\n                        }\r\n                        else {\r\n                            l = xAxis.basePosition();\r\n                        }\r\n                    }\r\n                    else {\r\n                        l = xAxis.basePosition();\r\n                    }\r\n                }\r\n                fitW = true;\r\n                dataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\r\n            }\r\n            this._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n            if ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\r\n                this._toggleColumn(dataItem, false);\r\n            }\r\n            else {\r\n                this._toggleColumn(dataItem, true);\r\n            }\r\n            let rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    this._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n                });\r\n            }\r\n            this._applyGraphicsStates(dataItem, previousDataItem);\r\n        }\r\n    }\r\n    _updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH) {\r\n        const width = graphics.get(\"width\");\r\n        const height = graphics.get(\"height\");\r\n        const maxWidth = graphics.get(\"maxWidth\");\r\n        const maxHeight = graphics.get(\"maxHeight\");\r\n        const ptl = this.getPoint(l, t);\r\n        const pbr = this.getPoint(r, b);\r\n        const tooltipPoint = dataItem.get(\"point\");\r\n        if (tooltipPoint) {\r\n            const point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\r\n            tooltipPoint.x = point.x + this._x;\r\n            tooltipPoint.y = point.y + this._y;\r\n        }\r\n        l = ptl.x;\r\n        r = pbr.x;\r\n        t = ptl.y;\r\n        b = pbr.y;\r\n        if ($type.isNumber(width)) {\r\n            const offset = ((r - l) - width) / 2;\r\n            l += offset;\r\n            r -= offset;\r\n        }\r\n        if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n            const offset = ((r - l) - maxWidth) / 2;\r\n            l += offset;\r\n            r -= offset;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            const offset = ((b - t) - height) / 2;\r\n            t += offset;\r\n            b -= offset;\r\n        }\r\n        if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n            const offset = ((b - t) - maxHeight) / 2;\r\n            t += offset;\r\n            b -= offset;\r\n        }\r\n        if (this.get(\"adjustBulletPosition\")) {\r\n            if (fitW) {\r\n                r = Math.min(Math.max(0, r), this._pw);\r\n                l = Math.min(Math.max(0, l), this._pw);\r\n            }\r\n            if (fitH) {\r\n                t = Math.min(Math.max(0, t), this._ph);\r\n                b = Math.min(Math.max(0, b), this._ph);\r\n            }\r\n        }\r\n        dataItem.setRaw(\"left\", l);\r\n        dataItem.setRaw(\"right\", r);\r\n        dataItem.setRaw(\"top\", t);\r\n        dataItem.setRaw(\"bottom\", b);\r\n        graphics.setPrivate(\"width\", r - l);\r\n        graphics.setPrivate(\"height\", b - t);\r\n        graphics.set(\"x\", l);\r\n        graphics.set(\"y\", b - (b - t));\r\n    }\r\n    _handleDataSetChange() {\r\n        super._handleDataSetChange();\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            this._toggleColumn(dataItem, false);\r\n        });\r\n    }\r\n    _applyGraphicsStates(dataItem, previousDataItem) {\r\n        const graphics = dataItem.get(\"graphics\");\r\n        const dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\r\n        const riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\r\n        const dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\r\n        const riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\r\n        if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            let open;\r\n            let close;\r\n            let previousClose;\r\n            if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\r\n                open = dataItem.get(this._yOpenField);\r\n                close = dataItem.get(this._yField);\r\n                previousClose = previousDataItem.get(this._yField);\r\n            }\r\n            else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\r\n                open = dataItem.get(this._xOpenField);\r\n                close = dataItem.get(this._xField);\r\n                previousClose = previousDataItem.get(this._xField);\r\n            }\r\n            if ($type.isNumber(open) && $type.isNumber(close)) {\r\n                if (close < open) {\r\n                    if (dropFromOpen) {\r\n                        dropFromOpen.apply();\r\n                    }\r\n                }\r\n                else {\r\n                    if (riseFromOpen) {\r\n                        riseFromOpen.apply();\r\n                    }\r\n                }\r\n                if ($type.isNumber(previousClose)) {\r\n                    if (close < previousClose) {\r\n                        if (dropFromPrevious) {\r\n                            dropFromPrevious.apply();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (riseFromPrevious) {\r\n                            riseFromPrevious.apply();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const graphics = dataItem.get(\"graphics\");\r\n        if (graphics) {\r\n            this.columns.removeValue(graphics);\r\n            graphics.dispose();\r\n        }\r\n        const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n        if (rangeGraphics) {\r\n            $array.each(rangeGraphics, (graphics) => {\r\n                const list = graphics.getPrivate(\"list\");\r\n                if (list) {\r\n                    list.removeValue(graphics);\r\n                }\r\n                graphics.dispose();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                promises.push(graphics.hide(duration));\r\n            }\r\n            const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    promises.push(graphics.hide(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _toggleColumn(dataItem, visible) {\r\n        const graphics = dataItem.get(\"graphics\");\r\n        if (graphics) {\r\n            graphics.setPrivate(\"visible\", visible);\r\n        }\r\n        const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n        if (rangeGraphics) {\r\n            $array.each(rangeGraphics, (graphics) => {\r\n                graphics.setPrivate(\"visible\", visible);\r\n            });\r\n        }\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.setPrivate(\"hidden\", !visible);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                promises.push(graphics.show(duration));\r\n            }\r\n            const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    promises.push(graphics.show(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        let legendDataItem = this.get(\"legendDataItem\");\r\n        if (this.get(\"useLastColorForLegendMarker\")) {\r\n            if (!dataItem) {\r\n                const lastDataItem = this.dataItems[this.endIndex() - 1];\r\n                if (lastDataItem) {\r\n                    dataItem = lastDataItem;\r\n                }\r\n            }\r\n        }\r\n        if (legendDataItem) {\r\n            let graphics = this.columns.template;\r\n            if (dataItem) {\r\n                let column = dataItem.get(\"graphics\");\r\n                if (column) {\r\n                    graphics = column;\r\n                }\r\n            }\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\r\n                    const ds = markerRectangle.states.lookup(\"default\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        const value = graphics.get(setting, this.get(setting));\r\n                        markerRectangle.set(setting, value);\r\n                        ds.set(setting, value);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            return super._getTooltipTarget(dataItem);\r\n        }\r\n        let column = dataItem.get(\"graphics\");\r\n        if (column) {\r\n            return column;\r\n        }\r\n        return this;\r\n    }\r\n}\r\nObject.defineProperty(BaseColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"BaseColumnSeries\"\r\n});\r\nObject.defineProperty(BaseColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([BaseColumnSeries.className])\r\n});\r\n//# sourceMappingURL=BaseColumnSeries.js.map","import { BaseColumnSeries } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[TemplateList]] of all columns in series.\r\n         *\r\n         * `columns.template` can be used to set default settings for all columns,\r\n         * or to change on existing ones.\r\n         */\r\n        Object.defineProperty(this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n            }, [this.columns.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeColumn(dataItem, listTemplate) {\r\n        const column = this.mainContainer.children.push(listTemplate.make());\r\n        column._setDataItem(dataItem);\r\n        listTemplate.push(column);\r\n        return column;\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.columns = new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n            position: \"absolute\",\r\n            themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n        }, [this.columns.template, axisRange.columns.template]));\r\n    }\r\n}\r\nObject.defineProperty(ColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColumnSeries\"\r\n});\r\nObject.defineProperty(ColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\r\n});\r\n//# sourceMappingURL=ColumnSeries.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this.onPrivate(\"startIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this.onPrivate(\"endIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axis.disposeDataItem(axisDataItem);\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._bullets = {};\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._bullets = {};\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\") {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\") {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            let positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\r\n            let positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            let x = 0;\r\n            let y = 0;\r\n            let w = right - left;\r\n            let h = bottom - top;\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                sprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\r\n                let field = bullet.get(\"field\");\r\n                const baseAxis = this.get(\"baseAxis\");\r\n                const xAxis = this.get(\"xAxis\");\r\n                const yAxis = this.get(\"yAxis\");\r\n                if (field != undefined) {\r\n                    let realField;\r\n                    if (baseAxis == xAxis) {\r\n                        if (field == \"value\") {\r\n                            realField = this._yField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._yOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._yHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._yLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionY = yAxis.getDataItemPositionY(dataItem, realField, 0, this.get(\"vcy\", 1));\r\n                            point = yAxis.get(\"renderer\").positionToPoint(positionY);\r\n                            y = point.y;\r\n                            x = left + w * locationX;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (field == \"value\") {\r\n                            realField = this._xField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._xOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._xHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._xLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionX = xAxis.getDataItemPositionX(dataItem, realField, 0, this.get(\"vcx\", 1));\r\n                            point = xAxis.get(\"renderer\").positionToPoint(positionX);\r\n                            x = point.x;\r\n                            y = bottom - h * locationY;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    x = left + w * locationX;\r\n                    y = bottom - h * locationY;\r\n                }\r\n                const stacked = bullet.get(\"stacked\");\r\n                if (stacked) {\r\n                    const chart = this.chart;\r\n                    if (baseAxis == xAxis) {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let yo = y;\r\n                            y = previousBounds.top;\r\n                            if (stacked == \"down\") {\r\n                                y = previousBounds.bottom - bounds.top;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (yo < chart.plotContainer.height() / 2) {\r\n                                        y = previousBounds.bottom - bounds.top;\r\n                                    }\r\n                                    else {\r\n                                        y += bounds.bottom;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                y += bounds.bottom;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                    else {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let xo = x;\r\n                            x = previousBounds.right;\r\n                            if (stacked == \"down\") {\r\n                                x = previousBounds.left - bounds.right;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (xo < chart.plotContainer.width() / 2) {\r\n                                        x = previousBounds.left - bounds.right;\r\n                                    }\r\n                                    else {\r\n                                        x -= bounds.left;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                x -= bounds.left;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                }\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                sprite.setAll({ x, y });\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetGrouping() {\r\n        $object.each(this._dataSets, (_key, dataSet) => {\r\n            if (dataSet != this._mainDataItems) {\r\n                $array.each(dataSet, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n        });\r\n        this._dataSets = {};\r\n        this._dataItems = this.mainDataItems;\r\n    }\r\n    _handleDataSetChange() {\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            let bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    if (bullet) {\r\n                        let sprite = bullet.get(\"sprite\");\r\n                        if (sprite) {\r\n                            sprite.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        if (!this.getPrivate(\"doNotUpdateLegend\")) {\r\n            this.updateLegendMarker(dataItem);\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            if (!this.isHidden() && this.get(\"visible\")) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    /**\r\n     * Resets cached axis scale values.\r\n     */\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (baseAxis == xAxis && xAxis.isType(\"DateAxis\")) {\r\n            const baseDuration = xAxis.baseDuration();\r\n            const minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\r\n            const dl = baseDuration * this.get(\"locationX\", 0.5);\r\n            let value = -Infinity;\r\n            while (value < minSelection) {\r\n                const dataItem = this.dataItems[index];\r\n                if (dataItem) {\r\n                    const open = dataItem.open;\r\n                    if (open) {\r\n                        value = open[\"valueX\"];\r\n                    }\r\n                    else {\r\n                        value = dataItem.get(\"valueX\", 0);\r\n                    }\r\n                    value += dl;\r\n                    if (value < minSelection) {\r\n                        index++;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.10.3\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map","import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowTop\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        focusableElements[index].focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        container.append(htmlElement);\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            const bounds = target.globalBounds();\r\n            htmlElement.style.top = (bounds.top) + \"px\";\r\n            htmlElement.style.left = (bounds.left) + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                target._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n                target.setPrivate(\"minWidth\", w / scale);\r\n                target.setPrivate(\"minHeight\", h / scale);\r\n            }\r\n            else {\r\n                target.removePrivate(\"minWidth\");\r\n                target.removePrivate(\"minHeight\");\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = target.get(\"centerX\", 0) + \"%  \" + target.get(\"centerY\", 0) + \"%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        let width = this.get(\"width\");\r\n        let height = this.get(\"height\");\r\n        let pWidth = this.getPrivate(\"width\");\r\n        let pHeight = this.getPrivate(\"height\");\r\n        let bounds = {\r\n            left: 0,\r\n            top: 0,\r\n            right: this.width(),\r\n            bottom: this.height()\r\n        };\r\n        let layout = this.get(\"layout\");\r\n        let horizontal = false;\r\n        let vertical = false;\r\n        if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n            horizontal = true;\r\n        }\r\n        if (layout instanceof VerticalLayout) {\r\n            vertical = true;\r\n        }\r\n        if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n            // void\r\n        }\r\n        else {\r\n            let m = Number.MAX_VALUE;\r\n            let l = m;\r\n            let r = -m;\r\n            let t = m;\r\n            let b = -m;\r\n            const paddingLeft = this.get(\"paddingLeft\", 0);\r\n            const paddingTop = this.get(\"paddingTop\", 0);\r\n            const paddingRight = this.get(\"paddingRight\", 0);\r\n            const paddingBottom = this.get(\"paddingBottom\", 0);\r\n            this.children.each((child) => {\r\n                if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                    let childBounds = child.adjustedLocalBounds();\r\n                    let childX = child.x();\r\n                    let childY = child.y();\r\n                    let cl = childX + childBounds.left;\r\n                    let cr = childX + childBounds.right;\r\n                    let ct = childY + childBounds.top;\r\n                    let cb = childY + childBounds.bottom;\r\n                    if (horizontal) {\r\n                        cl -= child.get(\"marginLeft\", 0);\r\n                        cr += child.get(\"marginRight\", 0);\r\n                    }\r\n                    if (vertical) {\r\n                        ct -= child.get(\"marginTop\", 0);\r\n                        cb += child.get(\"marginBottom\", 0);\r\n                    }\r\n                    if (cl < l) {\r\n                        l = cl;\r\n                    }\r\n                    if (cr > r) {\r\n                        r = cr;\r\n                    }\r\n                    if (ct < t) {\r\n                        t = ct;\r\n                    }\r\n                    if (cb > b) {\r\n                        b = cb;\r\n                    }\r\n                }\r\n            });\r\n            if (l == m) {\r\n                l = 0;\r\n            }\r\n            if (r == -m) {\r\n                r = 0;\r\n            }\r\n            if (t == m) {\r\n                t = 0;\r\n            }\r\n            if (b == -m) {\r\n                b = 0;\r\n            }\r\n            bounds.left = l - paddingLeft;\r\n            bounds.top = t - paddingTop;\r\n            bounds.right = r + paddingRight;\r\n            bounds.bottom = b + paddingBottom;\r\n            const minWidth = this.get(\"minWidth\");\r\n            if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                if (bounds.right - bounds.left < minWidth) {\r\n                    if (bounds.right >= minWidth) {\r\n                        bounds.left = bounds.right - minWidth;\r\n                    }\r\n                    else {\r\n                        bounds.right = bounds.left + minWidth;\r\n                    }\r\n                }\r\n            }\r\n            const minHeight = this.get(\"minHeight\");\r\n            if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                if (bounds.bottom - bounds.top < minHeight) {\r\n                    if (bounds.bottom >= minHeight) {\r\n                        bounds.top = bounds.bottom - minHeight;\r\n                    }\r\n                    else {\r\n                        bounds.bottom = bounds.top + minHeight;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._contentWidth = bounds.right - bounds.left;\r\n        this._contentHeight = bounds.bottom - bounds.top;\r\n        if ($type.isNumber(width)) {\r\n            bounds.left = 0;\r\n            bounds.right = width;\r\n        }\r\n        if ($type.isNumber(pWidth)) {\r\n            bounds.left = 0;\r\n            bounds.right = pWidth;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = height;\r\n        }\r\n        if ($type.isNumber(pHeight)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = pHeight;\r\n        }\r\n        this._localBounds = bounds;\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template]))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template]))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template]))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                    itemContainer.markDirtyAccessibility();\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => this.showTooltip(), 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\") && this.isFocus()) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    dispose() {\r\n        super.dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            this._render(subStatus);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        if (layerDirty || interactive) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (interactive) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (interactive) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        context.save();\r\n                        context.beginPath();\r\n                        if (chunk.fill) {\r\n                            context.strokeStyle = chunk.fill.toCSS();\r\n                        }\r\n                        else if (this.style.fill && this.style.fill instanceof Color) {\r\n                            context.strokeStyle = this.style.fill.toCSS();\r\n                        }\r\n                        context.lineWidth = thickness * offset;\r\n                        context.moveTo(offsetX, y);\r\n                        context.lineTo(offsetX + chunk.width, y);\r\n                        context.stroke();\r\n                        context.restore();\r\n                    }\r\n                    if (interactive && this.interactive) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale || this._originalScale == 1) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status);\r\n                break;\r\n            default:\r\n                super._render(status);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            if (status.layer.dirty) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status)) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format) {\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this._root.utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            if (this.autoDispose) {\r\n                $array.each(this._values, (x) => {\r\n                    x.dispose();\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    let angle = startAngle * RADIANS;\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n            break;\r\n        }\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + degrees / 360 * radiusStep;\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { AnimatedTheme } from \"../.internal/themes/AnimatedTheme\";\r\nexport default AnimatedTheme;\r\n//# sourceMappingURL=Animated.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"element\"];","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot, render, StrictMode, useEffect } from '@wordpress/element';\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nconst domElement = document.getElementById(\"chart_wrapper\");\r\nconst CRWC_Index = () => {\r\n    useEffect(() => {\r\n        let root = am5.Root.new(\"chartdiv\");\r\n\r\n        root.setThemes([\r\n            am5themes_Animated.new(root)\r\n        ]);\r\n\r\n        let chart = root.container.children.push(\r\n            am5xy.XYChart.new(root, {\r\n                panY: false,\r\n                layout: root.verticalLayout\r\n            })\r\n        );\r\n\r\n        // Define data\r\n        let data = [{\r\n            category: \"Research\",\r\n            value1: 1000,\r\n            value2: 588\r\n        }, {\r\n            category: \"Marketing\",\r\n            value1: 1200,\r\n            value2: 1800\r\n        }, {\r\n            category: \"Sales\",\r\n            value1: 850,\r\n            value2: 1230\r\n        }];\r\n\r\n        // Create Y-axis\r\n        let yAxis = chart.yAxes.push(\r\n            am5xy.ValueAxis.new(root, {\r\n                renderer: am5xy.AxisRendererY.new(root, {})\r\n            })\r\n        );\r\n\r\n        // Create X-Axis\r\n        let xAxis = chart.xAxes.push(\r\n            am5xy.CategoryAxis.new(root, {\r\n                renderer: am5xy.AxisRendererX.new(root, {}),\r\n                categoryField: \"category\"\r\n            })\r\n        );\r\n        xAxis.data.setAll(data);\r\n\r\n        // Create series\r\n        let series1 = chart.series.push(\r\n            am5xy.ColumnSeries.new(root, {\r\n                name: \"Series\",\r\n                xAxis: xAxis,\r\n                yAxis: yAxis,\r\n                valueYField: \"value1\",\r\n                categoryXField: \"category\"\r\n            })\r\n        );\r\n        series1.data.setAll(data);\r\n\r\n        let series2 = chart.series.push(\r\n            am5xy.ColumnSeries.new(root, {\r\n                name: \"Series\",\r\n                xAxis: xAxis,\r\n                yAxis: yAxis,\r\n                valueYField: \"value2\",\r\n                categoryXField: \"category\"\r\n            })\r\n        );\r\n        series2.data.setAll(data);\r\n\r\n        // Add legend\r\n        let legend = chart.children.push(am5.Legend.new(root, {}));\r\n        legend.data.setAll(chart.series.values);\r\n\r\n        // Add cursor\r\n        chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n        return () => {\r\n            root.dispose();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"chartdiv\" style={{ width: \"500px\", height: \"500px\" }}></div>\r\n    );\r\n}\r\n\r\nif (createRoot) {\r\n    createRoot(domElement).render(<StrictMode><CRWC_Index /></StrictMode>);\r\n} else {\r\n    render(<StrictMode><CRWC_Index /></StrictMode>, domElement);\r\n}"],"names":["XYChart","SerialChart","constructor","super","arguments","Object","defineProperty","this","enumerable","configurable","writable","value","ListAutoDispose","chartContainer","children","push","Container","new","_root","width","p100","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","Button","themeTags","icon","Graphics","x","y","_afterNew","_defaultThemes","XYChartDefaultTheme","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","Rectangle","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","maxDeviation","newStart","Math","min","max","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","setRaw","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","_seriesAdded","colorSet","color","next","_setSoft","patternSet","pattern","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","force","indexOf","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","Percent","top","bottom","_fy","reverse","prevBottom","bounds","_dispose","classNames","concat","className","Theme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","ColorSet","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","fill","Color","fromHex","fillOpacity","saturation","setColor","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","p50","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","percent","strokeWidth","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYCursor","Grid","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","key","dir","focused","m","nextPosition","_alwaysShow","alwaysShow","isFocus","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","Axis","Component","List","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","DataItem","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","_a","_b","_c","remove","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisLabel","Label","AxisRenderer","ListTemplate","Template","AxisTick","_new","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","once","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","Tick","CategoryAxis","fields","len","_valuesDirty","_itemMap","isPrivateDirty","_handleRangeChange","_prepareAxisItems","startCategory","endCategory","baseAxis","openKey","otherAxis","ValueAxis","startDataItem","endDataItem","hasValue","__valueXShowFields","__valueYShowFields","minorLabelsEnabled","minorGridEnabled","maxCount","frequency","floor","_frequency","j","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","basePosition","getX","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","dataItemToPosition","axisPositionToIndex","_adjustPosition","populateString","markDirtyText","fieldName","seriesDataItem","zoomToIndexes","zoomToCategories","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","MultiDisposer","someDirty","_getMinMax","_handleSizeDirty","getMM","letter","_getSelectionMinMax","_groupData","_baseValue","_dseHandled","_formatText","numberFormat","formatter","getNumberFormatter","format","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","_minRealLog","pow","log","LOG10E","stepPower","stepAdjusted","minorGridCount","minorStep","_dataItems","processDataItem","nextValue","minorValue","_adjustMinMax","minorDataItem","minorDataItems","minorLabel","decCount","inited","valueToPosition","labelEndPosition","labelEndValue","hasTag","positionToValue","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","_cellLocation","axisLocation","getStackedXValueWorking","getStackedYValueWorking","cellEndValue","fixSmallStep","_fixMin","_fixMax","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","Number","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","BaseColumnSeries","XYSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","ds","visualSettings","setting","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","open","close","previousClose","apply","list","_super","__awaiter","promises","call","Promise","all","bullets","lastDataItem","column","_getTooltipTarget","ColumnSeries","RoundedRectangle","mainContainer","Series","valueFields","_setRawDefault","_removeAxisRange","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_xLowField","_xHighField","_yLowField","_yHighField","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","_tooltipFieldX","tooltipFieldY","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_dataGrouped","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","createLegendMarker","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","setDataSet","id","_dataSets","_dataSetId","resetGrouping","dataSet","_mainDataItems","mainDataItems","then","_isShowing","_sequencedShowHide","_isHiding","_valueFields","waitForStop","_markDirtyStack","stackedSeries","itemLocationX","itemLocationY","xPos","yPos","hideTooltip","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_shouldInclude","_position","resetExtremes","_adjustStartIndex","baseDuration","minSelection","dl","Registry","registry","addLicense","license","licenses","disposeAllRootElements","rootElements","pop","getRootById","found","forEach","item","dom","rAF","fps","callback","requestAnimationFrame","Root","settings","isReal","EventDispatcher","Language","NumberFormatter","DateFormatter","DurationFormatter","VerticalLayout","HorizontalLayout","GridLayout","resolution","accessible","_a11yD","useSafeResolution","_renderer","CanvasRenderer","HTMLElement","getElementById","InterfaceColors","inner","createElement","style","appendChild","tooltipContainerBounds","_tooltipContainerSettings","_inner","_updateComputedStyles","_init","moveDOM","childNodes","_initResizeSensor","resize","_handleLogo","_logo","offsetWidth","offsetHeight","_showBranding","logo","interactiveChildren","setStateOnChildren","scale","tooltipX","tooltipY","Tooltip","stroke","window","svgPath","_getRealSize","getBoundingClientRect","_getCalculatedSize","rect","calculateSize","setAttribute","tabindex","size","realWidth","realHeight","rootContainer","_rootContainer","DefaultTheme","view","htmlElementContainer","_htmlElementContainer","pointerEvents","overflow","readerAlertElement","clip","_readerAlertElement","focusElementContainer","_focusElementContainer","tooltipElementContainer","_tooltipElementContainer","eventKey","_isShift","shiftKey","focusedSprite","_focusedSprite","downEvent","getEvent","MouseEvent","simulated","dragOffsetX","dragOffsetY","isDragging","_keyboardDragPoint","dragPoint","moveEvent","upEvent","group","items","_tabindexes","filter","isVisibleDeep","lastIndex","_startTicker","setThemes","_addTooltip","_hasLicense","_resizeSensorDisposer","ResizeSensor","autoResize","_render","render","_focusElementDirty","_updateCurrentFocus","_runTickers","currentTime","_tickers","_runAnimations","running","_animations","state","_runAnimation","AnimationState","Stopped","Playing","_isDirtyAnimation","_runDirties","allParents","_isDirtyParents","_dirtyParents","objects","_dirty","entity","_isDirty","depths","_dirtyBounds","depth","_positionHTMLElements","dirtyPositions","_dirtyPositions","_updatePosition","_renderFrame","_updateTick","timestamp","_checkComputedStyles","animationDone","resetImageArray","_runTicker","now","animationTime","_ticker","_paused","_runTickerNow","timeout","endTime","performance","_addDirtyEntity","_addDirtyParent","_addDirtyBounds","_addDirtyPosition","_addAnimation","_markDirty","eachFrame","Disposer","markDirtyGlobal","walkChildren","child","markDirtyBounds","_isDisposed","readerAlert","innerHTML","themes","tooltipContainerSettings","layerMargin","_registerTabindexOrder","_invalidateTabindexes","_unregisterTabindexOrder","aindex","bindex","groups","_moveFocusElement","_makeFocusElement","_decorateFocusElement","_positionFocusElement","focusElement","removeAttribute","ariaLive","ariaChecked","ariaCurrent","ariaSelected","ariaOrientation","ariaValueNow","ariaValueMin","ariaValueMax","ariaValueText","ariaControls","getAttribute","tabIndex","disposers","_handleFocus","_handleBlur","_removeFocusElement","removeChild","_hideFocusElement","insertBefore","append","globalBounds","padding","focusPadding","_getSpriteByFocusElement","_focusNext","el","direction","focusableElements","Array","from","querySelectorAll","join","focus","tooltipElement","_makeTooltipElement","removePrivate","_removeTooltipElement","parentElement","_invalidateAccessibility","scaleWidth","scaleHeight","disposer","styles","getComputedStyle","fontHash","match","changed","_fontHash","_invalidateLabelBounds","Text","_licenseApplied","debugGhostView","tapToActivate","tapToActivateTimeout","_makeHTMLElement","htmlElement","boxSizing","_positionHTMLElement","_htmlEnabledContainers","compositeScale","compositeRotation","transform","transformOrigin","compositeOpacity","bbox","_adjustedLocalBounds","minWidth","minHeight","_setHTMLContent","html","_removeHTMLContent","_lookupRules","themeClass","_rules","ruleRaw","rules","order","splice","Chart","Settings","dataContext","_checkDirty","markDirtyValues","_startAnimation","_animationTime","ListData","data","incrementRef","_data","decrementRef","_onDataClear","_markDirtyGroup","_dataChanged","_makeDataItem","properties","oldIndex","_valueFieldsF","fieldKey","workingKey","_fieldsF","output","makeDataItem","pushDataItem","_duration","Sprite","makeContainer","Children","addChild","_childrenDisplay","allChildren","_prevWidth","_prevHeight","markDirtyPosition","childrenDisplay","contentMask","_contentMask","addChildAt","_percentageSizeChildren","_percentagePositionChildren","updateBackground","_localBounds","verticalScrollbar","_contentHeight","bg","eachChildren","_applyState","name","_applyStateAnimated","applyAnimate","_getBounds","pWidth","pHeight","horizontal","vertical","childBounds","adjustedLocalBounds","childX","childY","cl","cr","ct","cb","_contentWidth","updateContainer","_handleStates","_updateHTMLContent","_setParent","startGrip","endGrip","_vsbd0","_vsbd1","markDirtyLayer","_processTemplateField","values","updated","makeGraphics","gradient","gradientTarget","clear","setLineDash","strokeDashoffset","setLineDashOffset","blendMode","BlendMode","NORMAL","fillGradient","fillPattern","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","shadow","beginFill","endFill","stops","colorInherited","opacityInherited","getFill","PicturePattern","lineJoin","lineStyle","endStroke","showTooltip","Layout","availableWidth","minCellWidth","maxCellWidth","childWidth","columnCount","columnWidths","getColumnWidths","maxColumnHeight","prevX","isVisible","marginTop","marginBottom","marginLeft","marginRight","totalWidth","totalPercent","privateWidth","_text","_makeText","_textKeys","property","propValue","_setMaxDimentions","_maybeUpdateHTMLColor","textAlign","textVisible","toCSSHex","getText","getAccessibleText","_getAccessibleText","eachReverse","Entity","Legend","itemContainers","themeTagsSelf","markers","valueLabels","markerRectangles","makeItemContainer","itemContainer","makeMarker","marker","makeValueLabel","makeMarkerRectangle","nameField","fillField","strokeField","clickTarget","useDefaultMarker","_t","markDirtyAccessibility","clickContainer","_addClickEvents","targetA","targetB","indexA","indexB","hoverDataItem","unhoverDataItem","labelText","Line","points","segments","PointedRectangle","bwh","xtl","ytl","xbl","d1","d2","stemX","arcTo","stemY","closePath","_draw","drawRect","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","reset","patterns","_placeBulletsContainer","_removeBulletsContainer","_handleBullets","getDataItemById","_makeBullets","bulletFunction","_makeBullet","_makeBulletReal","addBullet","_selectionAggregatesCalculated","baseValueSeries","_calculateAggregates","absSum","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","adjustedStartIndex","_getBase","minValue","dataField","maxValue","_entities","neutral","defaultState","customFunction","propertyValue","interpolate","percentInterpolate","_hideBullets","_positionBullets","_bullet","realDuration","delay","getTooltip","SpriteEventDispatcher","_sprite","_makePointerEvent","_onRenderer","_rendererDisposers","CounterDisposer","increment","_on","context","shouldClone","info","rendererEvent","RENDERER_EVENTS","stopParentDispatch","_dispatchParents","dispatchParents","old","_hasDown","_hasMoved","removeHovering","markDirtyKey","_addPercentagePositionChildren","_markDirtyPrivateKey","_removeTemplateField","_templateField","_removeObjectTemplate","_createEvents","_setObjectTemplate","_applyTemplates","oldDataItem","newDataItem","_parent","_addPercentageSizeChildren","updatePivotPoint","pivot","setLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","isHover","_statesHandled","_dragDp","dragStart","dragMove","dragStop","showTooltipOn","_tooltipDp","_ev","toggleKey","_toggleDp","_isDragging","alpha","angle","wheelable","blur","saturate","brightness","contrast","sepia","hue","invert","_focusDp","_hoverDp","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","inactive","_dragEvent","_dragPoint","dragEvent","getLocalBounds","self","invalidateBounds","newBounds","_fixMinBounds","getAdjustedBounds","privateHeight","_removeParent","hover","unhover","tooltipPosition","tooltipTarget","_setMatrix","_getTooltipPoint","promise","dx","dy","xx","yy","p0","p1","p2","p3","appear","success","_error","_isHidden","animations","waitForAnimations","hovering","_findStaticTemplate","_walkParents","_walkParent","updateChildren","prevParent","numberFormatter","getDateFormatter","dateFormatter","getDurationFormatter","durationFormatter","_getDownPoint","_getDownPointId","toFront","toBack","makeTextStyle","makeText","textStyle","wordWrapWidth","oversizedBehavior","breakWords","ellipsis","ignoreFormatting","minScale","_textStyles","styleName","templates","_setDefaultFn","_label","_updateBackground","_updateTextColor","_htmlContentHovered","_handleReaderAnnouncement","_tooltips","updateBackgroundColor","_keepHoverDp","outEvent","_fillDp","_strokeDp","_labelDp","alternative","cw","ch","parentW","parentH","_w","_h","pointTo","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","_fx","animationDuration","animationEasing","availableHeight","childHeight","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","exec","assertBinary","eachTargets","hitTarget","onPointerEvent","element","touches","changedTouches","isTainted","image","canvas","getContext","willReadFrequently","drawImage","getImageData","err","console","warn","src","clearCanvas","CanvasPivot","CanvasDisplayObject","DisposerClass","Matrix","subStatus","status","_layer","_removeObject","getLayer","dirty","getCanvas","defaultLayer","margin","_ghostLayer","setMargin","layers","registerChildLayer","resizeLayer","resizeGhost","_addBounds","_bounds","_getColorId","_colorId","paintId","_isInteractive","_forceInteractive","_isInteractiveMask","contains","_matrix","applyInverse","getLocalMatrix","_uMatrix","setTransform","PI","bn","matrix","_addEvent","_localMatrix","copyFrom","prepend","_transform","tx","ty","_transformMargin","_transformLayer","_omitTainted","ghostLayer","ghostContext","save","_runPath","globalAlpha","compoundAlpha","restore","tainted","_hovering","has","dragging","_dragging","some","shouldCancelTouch","_touchActive","CanvasContainer","_children","_childLayers","deep","setPoint","Op","colorize","_context","_forceColor","colorizeGhost","forceColor","path","pathGhost","addBounds","BeginPath","beginPath","BeginFill","fillStyle","EndFill","clearShadow","EndStroke","LineStyle","strokeStyle","lineWidth","LineDash","dash","LineDashOffset","dashOffset","lineDashOffset","DrawRect","DrawCircle","radius","arc","DrawEllipse","radiusX","radiusY","ellipse","Arc","cx","cy","startAngle","endAngle","anticlockwise","arcBounds","ArcTo","x2","y2","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","QuadraticCurveTo","quadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","CanvasGraphics","_operations","_pushOp","op","_fillAlpha","toCSS","_hasShadows","_strokeAlpha","drawCircle","drawEllipse","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","rest","relative","bs","px","py","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","layerDirty","globalCompositeOperation","renderDetached","CanvasText","_textInfo","_shared","textBaseline","_prerender","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","style2","fontVariant","fontWeight","fontFamily","_measure","line","textChunks","chunk","fillText","textDecoration","thickness","metrics","_measureText","actualBoundingBoxLeft","actualBoundingBoxRight","TextFormatter","getTextStyle","_ignoreFontWeight","test","navigator","vendor","rtl","truncate","wrap","refText","lines","toString","replace","currentStyle","styleRestored","chunks","lineInfo","ascent","actualBoundingBoxAscent","actualBoundingBoxDescent","currentFormat","currentFill","currentChunkWidth","currentVerticalAlign","currentDecoration","skipFurtherText","firstTextChunk","leftoverChunks","verticalAlign","chunkWidth","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","slice","unshift","substr","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","ratio","_fitRatio","_originalScale","maxW","maxH","fallbackBreakWords","tmp","measureText","fakeMetrics","div","innerText","visibility","body","fontBoundingBoxAscent","fontBoundingBoxDescent","CanvasTextStyle","CanvasRadialText","textType","_renderCircular","deltaAngle","orientation","inward","align","kerning","clockwise","shouldReverse","_textReversed","maxAngle","midAngle","textHeight","lineStartAngle","rotate","angleShift","char","charWidth","_measureCircular","chars","CanvasImage","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","CanvasRendererEvent","originalPoint","Touch","identifier","ArrayDisposer","GhostLayer","_patternCanvas","Set","devicePixelRatio","_layerDom","_events","exportableView","listener","_touchActiveTimeout","_delayTouchDeactivate","passive","prevent","obj","imageArray","clearTimeout","parentNode","createLinearGradient","createRadialGradient","radius1","radius2","createPattern","repetition","_patternContext","clearRect","makeRadialText","makePicture","_calculatedWidth","_calculatedHeight","calculatedWidth","calculatedHeight","_realWidth","_realHeight","createDetachedLayer","CanvasLayer","getLayerByOrder","existingLayer","_dirtyLayers","_lastPointerMoveEvent","_dispatchGlobalMousemove","rgb","distributeId","_colorMap","_adjustBoundingBox","DOMRect","adjustPoint","widthScale","heightScale","_getHitTarget","pixel","colorId","fromRGB","getObjectAtPoint","getImageArray","_withEvents","dispatching","cleanup","callbacks","disposed","_dispatchEventAll","interactionsEnabled","_dispatchEvent","dispatched","object","_dispatchMousedown","originalTarget","dragged","_mousedown","delete","_replacedCursorStyle","add","_dispatchGlobalMouseup","_dispatchDragMove","_dispatchDragEnd","clickevent","_dispatchDoubleClick","_dispatchWheel","_makeSharedEvent","_listeners","_onPointerEvent","timer","_","_initEvent","mouseup","pointercancel","mousedown","mousemove","options","canvasWidth","canvasHeight","maxScale","maintainPixelRatio","canvases","forceRender","needRerender","exportableContext","extraX","extraY","clientWidth","clientHeight","domWidth","domHeight","_resolution","_width","_height","Pattern","_afterNewApplyThemes","_pattern","_checkDirtyFill","backgroundDisplay","_backgroundDisplay","_load","_image","patternWidth","patternHeight","fit","Image","decode","catch","normalize","defaultInterpolate","colorInterpolate","getInterpolate","AnimationTime","_entity","_stopEvent","_playingDuration","_startingTime","_from","_to","_current","progress","_play","jumpTo","current","tweenTo","array","any","map","fn","eachContinue","shiftLeft","last","first","insert","pushAll","input","removeFirst","move","toIndex","removeIndex","pushOne","ind","toArray","isArray","copy","findIndex","matches","findIndexReverse","find","findReverse","findMap","shuffle","temporaryValue","randomIndex","currentIndex","random","getSortedIndex","ordering","getFirstSortedIndex","keepIf","keep","_container","_onRemoved","_onInserted","_disposed","string2hex","string","repeat","parseInt","rgba2hex","hex","fromAny","_hex","g","toHSL","fromHSL","fromString","fromCSS","lightAlternative","darkAlternative","mode","lighten","brighten","generateColors","pass","passOptions","reuse","hsl","lightness","currentStep","_onPush","processor","processRow","_onInsertIndex","_onSetIndex","JsonData","_value","_setDefaults","_setDefault","source","ignoreTimezone","formatted","date","locales","Intl","DateTimeFormat","parseFormat","convertLocal","applyFormat","toUpperCase","fullYear","month","weekday","day","hours","minutes","seconds","milliseconds","res","getUTCFullYear","getUTCMonth","getUTCDay","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getFullYear","getMonth","getDay","getDate","getHours","getMinutes","getSeconds","getMilliseconds","parts","year","_getMonth","_getShortMonth","translateFunc","_getShortWeekday","_getWeekday","Timezone","getTimezoneOffset","tz","tzh","tzm","toISOString","toUTCString","dateFormat","_months","_shortMonths","_weekdays","_shortWeekdays","parse","reg","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","week","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","minute","second","millisecond","millisecondDigits","zone","iso","regex","RegExp","resolveMonth","resolveShortMonth","hour","isAm","ts","resolveTimezoneOffset","UTC","isDefault","translateAll","MutableValueDisposer","_disposer","_counter","segmentedLine","firstGroup","firstPoint","p","smoothedSegmentedline","tensionX","tensionY","smoothedLine","closed","controlPointA","controlPointB","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","aminute","ahour","aday","aweek","amonth","ayear","base","getFormat","details","positive","negative","zero","_part","parsed","partFormat","dirs","absolute","_unitAliases","tstamp","toTimeStamp","ints","part","unit","_toTimeUnit","digits","unitValue","_getUnitValue","code","maxUnit","getValueUnit","currentUnit","ms","_getUnitValues","linear","quad","cubic","exp","sine","cos","circle","sqrt","yoyo","ease","out","inOut","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounce","bounceOut","tau","amplitude","period","asin","elastic","sin","Adapters","_callbacks","enable","_disabled","Animation","loops","startingTime","_animation","_easing","_loops","_interpolate","_oldTime","_playing","stopped","_stopped","pause","play","percentage","_time","resolve","_reject","_checkEnded","_run","_reset","counter","_userProperties","resetUserSettings","paused","_animatingSettings","_stopAnimation","_set","_animatingPrivateSettings","_stopAnimationPrivate","_setPrivate","Paused","_settingEvents","off","_privateSettingEvents","offPrivate","getRaw","fallback","_sendKeyEvent","_sendPrivateKeyEvent","_setRaw","removeAll","_privateSettings","_setPrivateRaw","_prevPrivateSettings","States","_internalTemplates","_registerId","_template","shouldApply","_dirtyPrivate","_disposerProperties","_name","isUserSetting","_removeTemplateProperty","_userPrivateProperties","_removeTemplatePrivateProperty","_setTemplateProperty","_findTemplateByKey","_setTemplatePrivateProperty","_findTemplateByPrivateKey","_applyStateByKey","other","seen","_eachTemplate","_apply","_userSettings","_applyTemplate","_templateDisposers","privateSettings","_runSetup","setup","_templates","_disposeTemplates","_findTemplate","_removeTemplates","isConnected","defaults","tag","theme","allRules","every","result","prevId","entitiesById","removeDispose","_killed","_iterating","_enabled","hasListeners","hasListenersByType","killed","amount","_removeListener","_removeExistingListener","_eachListener","removeType","_shouldDispatch","_type","TargetedEventDispatcher","prompt","translation","translateAny","setTranslationAny","setTranslationsAny","translations","translateEmpty","checkBounds","initial","_values","hasIndex","_onRemoveIndex","_onMoveIndex","_onClear","swap","value_a","value_b","shift","newArray","Symbol","iterator","autoDispose","HALFPI","RADIANS","DEGREES","precision","isNumber","rounded","getCubicControlPointA","getCubicControlPointB","fitToRange","tan","normalizeAngle","getArcBounds","bpoints","getArcPoint","fromAngle","toAngle","pt","mergeBounds","bound","fitAngleToRange","temp","inBounds","getAngle","diffX","diffY","atan2","getPointOnQuadraticCurve","pointA","pointB","controlPoint","getPointOnLine","referenceValue","reduce","prev","curr","boundsOverlap","bounds1","bounds2","horizontalOverlap","verticalOverlap","spiralPoints","innerRadius","radiusStep","stepSize","degrees","circlesOverlap","circle1","circle2","pivotX","pivotY","origin","a1","c1","tx1","bns","sns","suffix","NumberFormat","mod","active","thousandSeparator","decimalSeparator","mods","modSpacing","thousands","interval","prefix","applyPrefix","ol","parseFloat","toPrecision","toExponential","toFixed","ip","intsr","separator","decs","prefixes","newvalue","applied","number","escape","unescape","keys","keysOrdered","assign","hasKey","eachOrdered","ord","hasOwnProperty","softCopyProperties","compare","compareArray","leftLength","rightLength","compareNumber","isPercent","getTagValue","tagName","prop","dateFields","numericFields","durationFields","method","params","matches2","reg2","getTagValueFromObject","getCustomDataValue","customData","formatApplied","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","Native","_observer","ResizeObserver","entries","entry","_targets","addTarget","observe","box","removeTarget","unobserve","Raf","_timer","lastTime","loop","newSize","cancelAnimationFrame","observer","_sensor","_element","_listener","sensor","State","_eachSetting","stateAnimationDuration","stateAnimationEasing","_states","newState","TemplateState","_stateChanged","TemplateStates","TemplateAdapters","entities","cleanUp","quotedBlocks","noFormatting","chunks2","i2","chunk2","isImage","q","sleep","timeUnitDurations","getNextUnit","getDuration","getIntervalDuration","getDateIntervalDuration","firstDateOfWeek","firstTime","checkChange","timeOne","timeTwo","dateOne","dateTwo","timeZoneOffset1","timeZoneOffset2","setUTCMinutes","nextUnit","timeZoneOffset","offsetUTC","setUTCDate","setUTCSeconds","setUTCMilliseconds","setUTCHours","setUTCFullYear","endDays","startDays","setUTCMonth","wday","newTimeZoneOffset","roun","time","firstDate","unitCount","setTime","weekDay","isNaN","tzoffset","parsedDate","parseDate","offsetDif","newDiff","chooseInterval","intervals","getUnitValue","formatToParts","toUTCDate","_utc","hour12","timeZone","fractionalSecondDigits","_dtf","userOffset","newUserOffset","getType","assert","condition","message","toNumber","converted","isString","toDate","isDate","numberToString","zeros","isObject","PLACEHOLDER","PLACEHOLDER2","ready","readyState","removeEventListener","addEventListener","removeElement","onZoom","supports","cap","getPointerId","activeElement","getRendererEvent","isTouchEvent","PointerEvent","pointerType","setStyle","getStyle","getEventTarget","composedPath","host","isLocalEvent","setInteractive","getEventKey","keyCode","getShadowRoot","rootStylesheet","appendStylesheet","selector","cssRules","insertRule","StyleRule","nonce","head","sheet","getStylesheet","_rule","selectorText","deleteRule","_setVendorPrefixName","setProperty","StyleSheet","textContent","createStylesheet","addClass","classList","classes","currentClassName","removeClass","iOS","getSafeResolution","relativeToValue","full","decimalPlaces","padString","trimLeft","trimRight","trim","truncateTextWithEllipsis","maxLength","lastNonAlphanumericIndex","substring","hints","cleanFormat","stripTags","plainText","escapeForRgex","addSpacing","str","splitString","rtlChar","splitPattern","segment","getYearDay","getWeek","firstDay","getWeekYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","get12Hours","getTimeZone","long","savings","toLocaleString","timeZoneName","wotz","wtz","utcDate","capitalizeFirst","hslToRgb","hue2rgb","rgbToHsl","hsvToHsl","hsv","hslToHsv","getLightnessStep","getBrightnessStep","isLight","alternativeColor","light","dark","mergeTags","tags1","tags2","sameBounds","AnimatedTheme","interpolationDuration","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonDisabled","primaryButtonTextDisabled","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","alternativeBackground","alternativeText","disabled","interpolationEasing","pinchZoom","maxZoomLevel","minZoomLevel","zoomStep","maxPanOut","gap","colorOpacity","checkered","centered","horizontalGap","verticalGap","density","minOpacity","maxOpacity","stepCount","baseRadius","editOn","multiLine","pointerBaseWidth","cornerRadius","shiftRadius","dRadius","dInnerRadius","getFillFromSprite","getStrokeFromSprite","autoTextColor","spikes","rotationStep","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","done","sliceIterator","TypeError","TAU","mapToEllipse","_ref","cosphi","sinphi","centerx","centery","approxUnitArc","ang1","ang2","vectorAngle","ux","uy","vx","vy","dot","acos","_ref2","_ref2$xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","pxp","pyp","lambda","_getArcCenter","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","getArcCenter","_getArcCenter2","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","module","exports","extendStatics","setPrototypeOf","__proto__","prototype","__extends","String","__","__assign","n","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","kind","descriptor","access","addInitializer","init","__runInitializers","thisArg","useValue","__propKey","__setFunctionName","description","__metadata","metadataKey","metadataValue","metadata","_arguments","P","generator","reject","fulfilled","rejected","__generator","sent","trys","ops","Iterator","verb","__createBinding","o","k2","__esModule","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","jl","__spreadArray","pack","__await","__asyncGenerator","asyncIterator","AsyncIterator","resume","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","__importDefault","default","__classPrivateFieldGet","receiver","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","toStringTag","domElement","CRWC_Index","useEffect","am5","am5themes_Animated","am5xy","value1","value2","categoryField","valueYField","categoryXField","createRoot","StrictMode"],"sourceRoot":""}